% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query_params.R
\name{query_params}
\alias{query_params}
\title{Construct Query Parameters for SQUIDLE API Requests}
\usage{
query_params(
  include_columns = NULL,
  page = NULL,
  results_per_page = NULL,
  limit = NULL,
  offset = NULL,
  order_by = NULL,
  group_by = NULL,
  single = FALSE
)
}
\arguments{
\item{include_columns}{Optional character vector specifying which columns to include in the response.}

\item{page}{Optional integer specifying the page number for paginated results.}

\item{results_per_page}{Optional integer for the number of results per page.}

\item{limit}{Optional integer to specify the maximum number of objects to return.}

\item{offset}{Optional integer to specify the offset into the result set of the returned list of instances.}

\item{order_by}{A character vector of length 2 specifying a field and direction, where field is a string corresponding to the name of
a field of the requested model and direction is either "asc" for ascending order or "desc" for descending order.}

\item{group_by}{A character string or character vector specifying one or more fields to group results by.}

\item{single}{Logical, whether to request a single item (\code{TRUE}) or multiple (\code{FALSE}).}
}
\value{
A list of two elements:
\describe{
\item{\code{q}}{A list of query parameters (e.g., \code{limit}, \code{offset}, \code{order_by}, \code{group_by}, \code{single})
to be encoded as JSON within the \code{q={}} string.}
\item{\code{qparams}}{A list of top-level query parameters (e.g., \code{include_columns}, \code{page}, \code{results_per_page})
that appear outside the \code{q={}} string.}
}
}
\description{
Constructs a list of parameters formatted specifically to be used in a SQUIDLE API request. Formats parameters
to be passed directly to \code{SQAPI::request()} or \code{SQAPI::export()}. See
"https://squidle.org/api/help?template=api_help_page.html" for details on each parameter.
}
\examples{
# Example 1: Simple pagination parameters
query_params(page = 14, results_per_page = 56)

# Example 2: Using grouping and included columns
query_params(
  group_by = c("deployment.campaign.id", "deployment.id"),
  include_columns = c(
    "id", "key", "path_best", "timestamp_start", "path_best_thm",
    "pose.timestamp", "pose.lat", "pose.lon", "pose.alt", "pose.dep",
    "pose.data", "pose.id", "deployment.key", "deployment.campaign.key",
    "deployment.id", "deployment.campaign.id", "event_log"
  )
)

# Example 3: Ordering results by pose.dep in ascending order
query_params(
  order_by = c("pose.dep", "asc"),
  include_columns = c("id", "pose.dep")
)

}
